1. ProfileActivity
- 실제로 프로필을 수정하기 위한 Activity
- 업데이트 버튼을 통해 변경된 데이터(텍스트 및 프로필 사진)을 서버에 업로드 한다
- 사진 업로드는 FireStore.kt의 firebaseUpload 함수를 이용하여 업로드

2. ProfileLayout
- PreferenceScreen에 붙여넣기 위한 커스텀 레이아웃
- 여기 있는 onBindViewHolder 함수가 불리는 타이밍 = 사진 다운로드하는 타이밍
ㄴ 처음 프래그먼트 열었을 때,
- 리스너를 통해 1번에서 데이터가 변경되었다면 자동으로 수정한다
- 단, 리스너는 1번의 텍스트 데이터에만 달려있다 -> 즉, 사진 파일에 대한 리스너는 존재하지 않음


3. SettingFragment
- PreferenceScreen을 보여주는 주체임
- Tag를 수정하면 즉시, 서버에 데이터를 업데이트함


<버그>
1. Tag를 수정하면 프로필 정보(사진 포함)의 리스너도 같이 발동함 - C
- 리스너로 인해 텍스트 파일이 같이 다운로드되는 것은 상관없지만 사진도 같이 다운로드되는건 꽤 큼

2. 프로필 업데이트 시 리스너가 여러 번 발동함 - C
- 프로필 데이터를 1개씩 업로드 하기 때문
- 업로드 전 값을 비교하고 1개씩 업로드 하게 변경 - 이렇게 하면 호출되는 횟수를 최소화할 수 있음
- 아니면 아얘 데이터베이스의 디렉토리를 바꿔야함 => 일단 디렉토리 바꿨음

3. sharedPreference의 Listener를 이용해서 settingFragment의 xml을 재갱신하기 - C
- 프로필 사진 업로드 실시 -> 업로드 성공 -> 실시간 데이터베이스에 데이터 하나 업로드(uid/trigger)(항상 같은 값을 업로드)
- 해당 데이터가 변경됨 -> settingFragment에서 fragment를 다시 set하기
